namespace Models.Common;

public static class Code39
{
    public static IEnumerable<int> ToCode39Bars(this string value) =>
        ("*" + value + "*").Encode();

    private static IEnumerable<int> Encode(this IEnumerable<char> values) =>
        values.SelectMany(Encode);

    private static int[] Encode(char value) => Code[value];

    private static IDictionary<char, int[]> Code { get; } = new Dictionary<char, int[]>()
    {
        ['1'] = [2, 1, 0, 1, 1, 2],
        ['2'] = [1, 2, 0, 1, 1, 2],
        ['3'] = [2, 2, 0, 1, 1, 1],
        ['4'] = [1, 1, 0, 2, 1, 2],
        ['5'] = [2, 1, 0, 2, 1, 1],
        ['6'] = [1, 2, 0, 2, 1, 1],
        ['7'] = [1, 1, 0, 1, 2, 2],
        ['8'] = [2, 1, 0, 1, 2, 1],
        ['9'] = [1, 2, 0, 1, 2, 1],
        ['0'] = [2, 1, 1, 1, 0, 2],
        ['A'] = [2, 1, 1, 0, 1, 2],
        ['B'] = [1, 2, 1, 0, 1, 2],
        ['C'] = [2, 2, 1, 0, 1, 1],
        ['D'] = [1, 1, 2, 0, 1, 2],
        ['E'] = [2, 1, 2, 0, 1, 1],
        ['F'] = [1, 2, 2, 0, 1, 1],
        ['G'] = [1, 1, 1, 0, 2, 2],
        ['H'] = [2, 1, 1, 0, 2, 1],
        ['I'] = [1, 2, 1, 0, 2, 1],
        ['J'] = [1, 1, 2, 0, 2, 1],
        ['K'] = [2, 1, 1, 2, 0, 1],
        ['L'] = [1, 2, 1, 2, 0, 1],
        ['M'] = [2, 2, 1, 2, 0, 0],
        ['N'] = [1, 1, 2, 2, 0, 1],
        ['O'] = [2, 1, 2, 2, 0, 0],
        ['P'] = [1, 2, 2, 2, 0, 0],
        ['Q'] = [1, 1, 1, 2, 2, 0],
        ['R'] = [2, 1, 1, 2, 2, 0],
        ['S'] = [1, 2, 1, 2, 2, 0],
        ['T'] = [1, 1, 2, 2, 2, 0],
        ['U'] = [2, 0, 1, 1, 2, 1],
        ['V'] = [1, 0, 1, 2, 2, 1],
        ['W'] = [2, 0, 1, 2, 2, 0],
        ['X'] = [1, 0, 2, 2, 2, 1],
        ['Y'] = [2, 0, 2, 2, 2, 0],
        ['Z'] = [1, 0, 2, 1, 2, 2],
        ['-'] = [1, 0, 2, 1, 1, 2],
        ['.'] = [2, 0, 2, 1, 1, 1],
        [' '] = [1, 0, 2, 1, 2, 1],
        ['$'] = [1, 0, 1, 0, 1, 1],
        ['/'] = [1, 0, 1, 1, 0, 1],
        ['+'] = [1, 1, 0, 0, 1, 1],
        ['%'] = [1, 0, 0, 1, 1, 1],
        ['*'] = [1, 0, 2, 2, 2, 1]
    };
}